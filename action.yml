name: build/publish docker & singularity (cvmfs) images

inputs:
  github_token:
    description: 'a PAT so the action can git push to github (images and cvmfs requests)'
    required: true
  image:
    description: |
      the full-qualified image (tagless) --
        include a registry if not storing with dockerhub
        ex: 'ghcr.io/foo/bar', 'foo/bar', etc.
    required: true
  action:
    description: |
      what action to perform
        BUILD                   - build and publish 'inputs.image'
        CVMFS_BUILD             - BUILD, then request CVMFS to build and persist 'inputs.image'
        CVMFS_REMOVE            - request CVMFS to delete 'inputs.cvmfs_remove_images'
        CVMFS_REMOVE_THEN_BUILD - CVMFS_REMOVE, then CVMFS_BUILD
    required: true
  # OPTIONAL
  cvmfs_dest_dir:
    description: |
      IF USING CVMFS:
        the CVMFS directory to place the singularity image built from the docker image
    default: ""
    required: false
  cvmfs_remove_images:
    description: |
      IF REMOVING ON CVMFS ('inputs.action' is 'CVMFS_REMOVE' or 'CVMFS_REMOVE_THEN_BUILD'):
        the images to remove on CVMFS -- newline-delimited
        images can be a pattern-based or verbatim -- see 'WIPACrepo/build-singularity-cvmfs-action'
    default: ""
    required: false
  free_disk_space:
    description: |
      FOR VERY LARGE IMAGES:
        whether to free disk space on the GitHub runner before building the image
    default: false
    type: boolean
    required: false
  build_platform:
    description: |
      what cpu architecture platform to use when building the image
    default: "linux/amd64"
    required: false


runs:
  using: "composite"

  steps:

    ####################################################################################
    # Prep before action logic
    ####################################################################################

    - name: Validate and Prep Image Tag Variables
      if: always()
      run: |
        # step: Validate and Prep Image Tag Variables
        set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
        
        # validate slash-format
        if [[ ! "${IMAGE}" =~ ^[^/]+/[^/]+(/[^/]+)?$ ]]; then
            echo "::error::IMAGE must be in the form 'namespace/image' or 'registry/namespace/image'"
            exit 1
        fi
        
        # validate there's no tag or digest attached
        last_segment="${IMAGE##*/}"
        if [[ "$last_segment" == *:* || "$last_segment" == *@* ]]; then
            echo "::error::IMAGE must not include a tag or digest"
            exit 1
        else
            echo "IMAGE_TAG_NAME=$last_segment" >> "$GITHUB_ENV"
        fi
      shell: bash

    - name: Determine if image needs to be built
      if: always()
      run: |
        # step: Determine if image needs to be built
        set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
        
        build_actions=(
          BUILD
          CVMFS_BUILD
          CVMFS_REMOVE_THEN_BUILD
        )
        
        # IF: action says to build
        for action in "${build_actions[@]}"; do
          if [[ "${{ inputs.action }}" == "$action" ]]; then
            echo "DOES_ACTION_NEED_BUILD=true" >> "$GITHUB_ENV"
            exit 0
          fi
        done
        # ELSE:
        echo "DOES_ACTION_NEED_BUILD=false" >> "$GITHUB_ENV"
      shell: bash

    - name: Summary (appears in GitHub UI)
      if: always()
      run: |
        # step: Summary (appears in GitHub UI)
        set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"

        {
          echo "# 🚀 Build & Publish Summary"
          echo ""
          echo "### 🔧 Inputs"
          echo "- **Image**: \`${{ inputs.image }}\`"
          echo "- **Action**: \`${{ inputs.action }}\`"
          echo "- **Platform**: \`${{ inputs.build_platform }}\`"
          echo "- **Free Disk Space**: \`${{ inputs.free_disk_space }}\`"
          if [[ "${{ inputs.cvmfs_dest_dir }}" != "" ]]; then
            echo "- **CVMFS Destination**: \`${{ inputs.cvmfs_dest_dir }}\`"
          fi
          echo ""
          echo "### 📦 Docker Image"
          echo "- **Tag**: \`${{ env.IMAGE_TAG_NAME }}\`"
          echo "- **Build Required**: \`${{ env.DOES_ACTION_NEED_BUILD }}\`"
          echo ""
          echo "### 📤 Status"
          if [[ "${{ env.DOES_ACTION_NEED_BUILD }}" == "true" ]]; then
            echo "- ✅ Docker image will be built and published"
          else
            echo "- ❎ Docker build skipped"
          fi

          if [[ "${{ inputs.action }}" == "CVMFS_BUILD" || "${{ inputs.action }}" == "CVMFS_REMOVE_THEN_BUILD" ]]; then
            echo "- ✅ Singularity image build requested on CVMFS"
          elif [[ "${{ inputs.action }}" == "CVMFS_REMOVE" ]]; then
            echo "- 🗑️ CVMFS image removal requested"
          fi

          echo ""
          echo "---"
          echo "_Generated on: $(date -u +"%Y-%m-%d %H:%M:%S UTC")_"
        } >> "$GITHUB_STEP_SUMMARY"
      shell: bash


    ####################################################################################
    # Action: Remove CVMFS
    ####################################################################################

    - if: inputs.action == 'CVMFS_REMOVE' || inputs.action == 'CVMFS_REMOVE_THEN_BUILD'
      name: Request Removing Image(s) from CVMFS
      uses: WIPACrepo/build-singularity-cvmfs-action@v2.0
      with:
        github_token: ${{ inputs.github_token }}  # so job can git push
        delete_image_tags: "${{ env.IMAGE_TAG_NAME }}:${{ github.ref_name }}-[SHA]"
        dest_dir: ${{ inputs.cvmfs_dest_dir }}  # Required for constructing path pattern


    ####################################################################################
    # Action: Build + Publish Docker Image
    ####################################################################################

    - if: env.DOES_ACTION_NEED_BUILD == 'true' && inputs.free_disk_space == 'true'
      uses: jlumbroso/free-disk-space@main  # clears space for image build
      with:
        docker-images: false  # keep docker otherwise build will re-download them

    - if: env.DOES_ACTION_NEED_BUILD == 'true'
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)

    - if: env.DOES_ACTION_NEED_BUILD == 'true'
      id: docker_meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ inputs.image }}
        tags: |
          # branches (PRs)
          type=sha,prefix={{branch}}-,enable=${{ github.ref_type == 'branch' }}
          # release tags
          type=semver,pattern={{major}},enable=${{ github.ref_type == 'tag' }}
          type=semver,pattern={{major}}.{{minor}},enable=${{ github.ref_type == 'tag' }}
          type=semver,pattern={{major}}.{{minor}}.{{patch}},enable=${{ github.ref_type == 'tag' }}

    - if: env.DOES_ACTION_NEED_BUILD == 'true' && ! startsWith(inputs.image, 'ghcr.io/')
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - if: env.DOES_ACTION_NEED_BUILD == 'true' && startsWith(inputs.image, 'ghcr.io/')
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github_token }}

    - if: env.DOES_ACTION_NEED_BUILD == 'true' && contains(inputs.build_platform, 'arm')
      name: Setup QEMU (if platform requires it)
      uses: docker/setup-qemu-action@v2

    - if: env.DOES_ACTION_NEED_BUILD == 'true'
      uses: docker/setup-buildx-action@v2

    - if: env.DOES_ACTION_NEED_BUILD == 'true'
      uses: docker/build-push-action@v3
      with:
        context: .
        platforms: ${{ inputs.build_platform }}
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}


    ####################################################################################
    # Action: Build Image on CVMFS
    ####################################################################################

    - if: inputs.action == 'CVMFS_BUILD' || inputs.action == 'CVMFS_REMOVE_THEN_BUILD'
      name: Request Building Singularity Image(s) on CVMFS
      uses: WIPACrepo/build-singularity-cvmfs-action@v2.0
      with:
        github_token: ${{ inputs.github_token }}  # so job can git push
        docker_tags: ${{ steps.docker_meta.outputs.tags }}
        dest_dir: ${{ inputs.cvmfs_dest_dir }}  # Required for constructing path pattern
